// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        // figure out if it's even worthwhile to load
        Or (a=load, b=reset, out=canResetOrInc);
        Or (a=canResetOrInc, b=inc, out=canLoad);

        // are we incrementing?
        Inc16 (in=previousState, out=incremented);
        Mux16 (a=in, b=incremented, sel=inc, out=ifInc);

        // are we loading a different bit value?
        Mux16 (a=ifInc, b=in, sel=load, out=ifLoaded);

        // do we need to reset?
        Mux16 (a=ifLoaded, b=false, sel=reset, out=ifReset);

        // now we register the results
        Register (in=ifReset, load=canLoad, out=out, out=previousState);
}
